# # copied from autogenerated SnoopCompile files
function _precompile_()
  ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
  precompile(Weber.SDL_GetError, ())
  precompile(Weber.visual, (Weber.SDLWindow, Int64, Int64, Weber.SDLFont, ColorTypes.RGB{FixedPointNumbers.UFixed{UInt8, 8}}, UInt32, String, Int64, Float64,))
  precompile(Weber.check_timing, (Weber.Experiment{Weber.SDLWindow}, Weber.CompoundMoment, Float64, Float64,))
  precompile(Weber.record_helper, (Weber.Experiment{Weber.SDLWindow}, Tuple{Base.Pair{Symbol, Base.VersionNumber}, Base.Pair{Symbol, String}, Base.Pair{Symbol, String}, Base.Pair{Symbol, Int64}, Base.Pair{Symbol, Int64}, Base.Pair{Symbol, Float64}, Tuple{Symbol, String}, Tuple{Symbol, String}, Tuple{Symbol, Base.VersionNumber}, Tuple{Symbol, String}, Base.Pair{Symbol, String}, Tuple{Symbol, String}}, Array{Symbol, 1},))
  precompile(Weber.handle, (Weber.Experiment{Weber.SDLWindow}, Weber.MomentQueue, Weber.CompoundMoment, Float64,))
  precompile(Weber.findkwd, (Tuple{Tuple{Symbol, String}, Base.Pair{Symbol, String}, Tuple{Symbol, String}, Tuple{Symbol, Base.VersionNumber}, Tuple{Symbol, String}, Tuple{Symbol, String}, Base.Pair{Symbol, Float64}, Base.Pair{Symbol, Int64}, Base.Pair{Symbol, Int64}, Base.Pair{Symbol, String}, Base.Pair{Symbol, String}, Base.Pair{Symbol, Base.VersionNumber}}, Symbol, String,))
  precompile(Weber.as_screen_coordinates, (Weber.SDLWindow, Int64, Float64, Int32, Int32,))
  precompile(Weber.update_stack_helper!, (Weber.SDLWindow, Weber.SDLCompound,))
  precompile(Weber.record_helper, (Weber.Experiment{Weber.SDLWindow}, Tuple{Base.Pair{Symbol, Base.VersionNumber}, Base.Pair{Symbol, String}, Base.Pair{Symbol, String}, Base.Pair{Symbol, Int64}, Base.Pair{Symbol, Int64}, Base.Pair{Symbol, Float64}, Tuple{Symbol, String}, Tuple{Symbol, String}, Tuple{Symbol, Base.VersionNumber}, Tuple{Symbol, String}, Base.Pair{Symbol, String}, Tuple{Symbol, Symbol}, Tuple{Symbol, String}}, Array{Symbol, 1},))
  precompile(Weber.as_screen_coordinates, (Weber.SDLWindow, Int64, Int64, Int32, Int32,))
  precompile(Weber.process, (Weber.Experiment{Weber.SDLWindow}, Weber.MomentQueue, Weber.KeyDownEvent,))
  precompile(Weber.handle, (Weber.Experiment{Weber.SDLWindow}, Weber.MomentQueue, Weber.ResponseMoment, Float64,))
  precompile(Weber.skip_offsets, (Weber.Experiment{Weber.NullWindow}, Weber.MomentQueue,))
  precompile(Weber.check_timing, (Weber.Experiment{Weber.SDLWindow}, Weber.ResponseMoment, Float64, Float64,))
  precompile(Weber.process, (Weber.Experiment{Weber.SDLWindow}, Weber.MomentQueue, Weber.CedrusUpEvent,))
  precompile(Weber.keep_skipping, (Weber.Experiment{Weber.SDLWindow}, Weber.CompoundMoment,))
  precompile(Weber.get_experiment, ())
  precompile(Weber.record_header, (Weber.Experiment{Weber.NullWindow},))
  precompile(Weber.push!, (Weber.DisplayStack, Weber.SDLClear,))
  precompile(Weber.display_priority, (Weber.SDLText,))
  precompile(Weber.find_font, (String, Array{String, 1},))
  precompile(Weber.setup_display, ())
  precompile(Weber.process, (Weber.Experiment{Weber.SDLWindow}, Weber.MomentQueue, Weber.CedrusDownEvent,))
  precompile(Weber.warmup_run, (Weber.Experiment{Weber.SDLWindow},))
  precompile(Weber.process, (Weber.Experiment{Weber.SDLWindow}, Weber.MomentQueue, Weber.KeyUpEvent,))
  precompile(Weber.process, (Weber.Experiment{Weber.SDLWindow}, Weber.MomentQueue, Weber.EndPauseEvent,))
  precompile(Weber.process, (Weber.Experiment{Weber.SDLWindow}, Weber.MomentQueue, Weber.WindowFocused,))
  precompile(Weber.report_deltas, (Weber.Experiment{Weber.NullWindow},))
  precompile(Weber.process, (Weber.Experiment{Weber.SDLWindow}, Weber.MomentQueue, Weber.WindowUnfocused,))
  precompile(Weber.addbreak_every, (Int64, Int64, Weber.KeyboardKey, String,))
  precompile(Weber.update_arguments, (Weber.SDLText,))
  precompile(Weber.handle, (Weber.Experiment{Weber.NullWindow}, Weber.MomentQueue, Weber.FinalMoment, Float64,))
  precompile(Weber.keep_skipping, (Weber.Experiment{Weber.NullWindow}, Weber.ExpandingMoment,))
  precompile(Weber.silence, (Float64,))
  precompile(Weber.run, (Weber.Experiment{Weber.NullWindow},))
  precompile(Weber.Type, (Type{Weber.SDLClear}, ColorTypes.RGB{FixedPointNumbers.UFixed{UInt8, 8}}, Int64, Float64,))
  precompile(Weber.empty_callback, (Ptr{Void}, Ptr{UInt8}, Int32,))
  precompile(Weber.addmoment, (Array{Weber.MomentQueue, 1}, Array{Weber.SimpleMoment, 1},))
  precompile(Weber.handle, (Weber.Experiment{Weber.NullWindow}, Weber.MomentQueue, Weber.CompoundMoment, Float64,))
  precompile(Weber.verify_buffer_size, (Int64, Void,))
  precompile(Weber.Type, (Type{Weber.SDLCompound}, Array{Weber.SDLSimpleRendered, 1},))
  precompile(Weber.handle, (Weber.Experiment{Weber.NullWindow}, Weber.MomentQueue, Weber.ExpandingMoment, Float64,))
  precompile(Weber.addmoment, (Array{Weber.MomentQueue, 1}, Function,))
  precompile(Weber.setup_sound, ())
  precompile(Weber.watch_pauses, (Weber.Experiment{Weber.SDLWindow}, Weber.CedrusUpEvent,))
  precompile(Weber.reset_response, ())
  precompile(Weber.process, (Weber.Experiment{Weber.NullWindow}, Weber.MomentQueue, Float64,))
precompile(Weber.handle, (Weber.Experiment{Weber.SDLWindow}, Weber.MomentQueue, Weber.ResponseMoment, Weber.KeyUpEvent,))
precompile(Weber.tone, (Int64, Int64,))
precompile(Weber.keep_skipping, (Weber.Experiment{Weber.SDLWindow}, Weber.OffsetStartMoment,))
precompile(Weber.watch_pauses, (Weber.Experiment{Weber.SDLWindow}, Weber.WindowUnfocused,))
precompile(Weber.pause, (Weber.Experiment{Weber.SDLWindow}, String, Float64,))
precompile(Weber.watch_pauses, (Weber.Experiment{Weber.SDLWindow}, Weber.WindowFocused,))
precompile(Weber.watch_pauses, (Weber.Experiment{Weber.SDLWindow}, Weber.KeyUpEvent,))
precompile(Weber.watch_pauses, (Weber.Experiment{Weber.SDLWindow}, Weber.CedrusDownEvent,))
precompile(Weber.handle, (Weber.Experiment{Weber.SDLWindow}, Weber.MomentQueue, Weber.ResponseMoment, Weber.KeyDownEvent,))
precompile(Weber.process, (Weber.Experiment{Weber.SDLWindow}, Weber.MomentQueue, Float64,))
precompile(Weber.check_timing, (Weber.Experiment{Weber.SDLWindow}, Weber.TimedMoment, Float64, Float64,))
precompile(Weber.check_timing, (Weber.Experiment{Weber.NullWindow}, Weber.CompoundMoment, Float64, Float64,))
precompile(Weber.clear, (Weber.SDLWindow, ColorTypes.RGB{FixedPointNumbers.UFixed{UInt8, 8}},))
precompile(Weber.run, (Weber.Experiment{Weber.SDLWindow},))
precompile(Weber.addmoment, (Array{Weber.Moment, 1}, Array{Weber.TimedMoment, 1},))
precompile(Weber.check_timing, (Weber.Experiment{Weber.SDLWindow}, Weber.OffsetStartMoment, Float64, Float64,))
precompile(Weber.addmoment, (Array{Weber.MomentQueue, 1}, Tuple{Array{Weber.SimpleMoment, 1}},))
precompile(Weber.handle, (Weber.Experiment{Weber.SDLWindow}, Weber.MomentQueue, Weber.ResponseMoment, Weber.WindowFocused,))
precompile(Weber.findkwd, (Tuple{Tuple{Symbol, String}, Tuple{Symbol, Symbol}, Base.Pair{Symbol, String}, Tuple{Symbol, String}, Tuple{Symbol, Base.VersionNumber}, Tuple{Symbol, String}, Tuple{Symbol, String}, Base.Pair{Symbol, Float64}, Base.Pair{Symbol, Int64}, Base.Pair{Symbol, Int64}, Base.Pair{Symbol, String}, Base.Pair{Symbol, String}, Base.Pair{Symbol, Base.VersionNumber}}, Symbol, String,))
precompile(Weber.draw, (Weber.SDLWindow, Weber.SDLText,))
precompile(Weber.check_timing, (Weber.Experiment{Weber.NullWindow}, Weber.OffsetStartMoment, Float64, Float64,))
precompile(Weber.check_timing, (Weber.Experiment{Weber.NullWindow}, Weber.ExpandingMoment, Float64, Float64,))
precompile(Weber.handle, (Weber.Experiment{Weber.SDLWindow}, Weber.MomentQueue, Weber.TimedMoment, Float64,))
precompile(Weber.check_timing, (Weber.Experiment{Weber.NullWindow}, Weber.TimedMoment, Float64, Float64,))
precompile(Weber.check_timing, (Weber.Experiment{Weber.NullWindow}, Weber.FinalMoment, Float64, Float64,))
precompile(Weber.addmoment, (Array{Weber.MomentQueue, 1}, Tuple{Array{Any, 1}},))
precompile(Weber.addmoment, (Array{Weber.MomentQueue, 1}, Tuple{Weber.TimedMoment, Weber.ResponseMoment},))
precompile(Weber.findkwd, (Tuple{Base.Pair{Symbol, String}, Tuple{Symbol, String}, Tuple{Symbol, Base.VersionNumber}, Tuple{Symbol, String}, Tuple{Symbol, String}, Base.Pair{Symbol, Float64}, Base.Pair{Symbol, Int64}, Base.Pair{Symbol, Int64}, Base.Pair{Symbol, String}, Base.Pair{Symbol, String}, Base.Pair{Symbol, Base.VersionNumber}}, Symbol, String,))
precompile(Weber.display, (Weber.SDLWindow, Weber.SDLCompound,))
precompile(Weber.push!, (Weber.DisplayStack, Weber.SDLText,))
precompile(Weber.addmoment, (Array{Weber.MomentQueue, 1}, Base.Take{Base.Repeated{Weber.TimedMoment}},))
precompile(Weber.visual, (Weber.SDLWindow, Int64, Float64, Weber.SDLFont, ColorTypes.RGB{FixedPointNumbers.UFixed{UInt8, 8}}, UInt32, String, Float64, Int64,))
precompile(Weber.display_priority, (Weber.SDLClear,))
precompile(Weber.addmoment, (Array{Weber.MomentQueue, 1}, Tuple{Weber.TimedMoment, Weber.CompoundMoment, Weber.TimedMoment},))
precompile(Weber.report_deltas, (Weber.Experiment{Weber.SDLWindow},))
precompile(Weber.addmoment, (Array{Weber.MomentQueue, 1}, Tuple{Weber.TimedMoment, Base.Take{Base.Repeated{Array{Weber.TimedMoment, 1}}}},))
precompile(Weber.handle, (Weber.Experiment{Weber.SDLWindow}, Weber.MomentQueue, Weber.OffsetStartMoment, Float64,))
precompile(Weber.display, (Weber.SDLWindow, Weber.SDLText,))
precompile(Weber.addmoment, (Array{Weber.MomentQueue, 1}, Array{Weber.TimedMoment, 1},))
precompile(Weber.watch_pauses, (Weber.Experiment{Weber.SDLWindow}, Weber.EndPauseEvent,))
precompile(Weber.visual, (Weber.SDLWindow, Int64, Int64, Weber.SDLFont, ColorTypes.RGB{FixedPointNumbers.UFixed{UInt8, 8}}, UInt32, String, Int64, Int64,))
precompile(Weber.keep_skipping, (Weber.Experiment{Weber.SDLWindow}, Weber.TimedMoment,))
precompile(Weber.samplerate, (Array{Float64, 1},))
precompile(Weber.keep_skipping, (Weber.Experiment{Weber.NullWindow}, Weber.OffsetStartMoment,))
precompile(Weber.handle, (Weber.Experiment{Weber.NullWindow}, Weber.MomentQueue, Weber.OffsetStartMoment, Float64,))
precompile(Weber.tone, (Int64, Float64,))
precompile(Weber.addmoment, (Array{Weber.MomentQueue, 1}, Weber.ResponseMoment,))
precompile(Weber.addmoment, (Weber.ExpandingMoment, Tuple{Weber.TimedMoment, Weber.TimedMoment, Weber.TimedMoment},))
precompile(Weber.addmoment, (Array{Weber.MomentQueue, 1}, Weber.TimedMoment,))
precompile(Weber.addmoment, (Array{Weber.MomentQueue, 1}, Array{Any, 1},))
precompile(Weber.close, (Weber.SDLWindow,))
precompile(Weber.exp_tick, ())
precompile(Weber.handle, (Weber.Experiment{Weber.NullWindow}, Weber.MomentQueue, Weber.TimedMoment, Float64,))
precompile(Weber.draw, (Weber.SDLWindow, Weber.SDLClear,))
precompile(Weber.tone, (Float64, Float64,))
precompile(Weber.Type, (Type{Weber.ExperimentInfo}, Array{Any, 1}, Base.Dict{Symbol, Any}, Float64, Float64, Base.Dates.DateTime, Array{Symbol, 1}, Base.Nullable{String}, Bool,))
precompile(Weber.addmoment, (Array{Weber.Moment, 1}, Array{Any, 1},))
precompile(Weber.draw_stack, (Weber.SDLWindow,))
precompile(Weber.Type, (Type{Weber.Experiment}, Weber.ExperimentInfo, Weber.ExperimentData, Weber.ExperimentFlags, Weber.SDLWindow,))
precompile(Weber.timed, (Weber.SDLText,))
precompile(Weber.addbreak, (Weber.Experiment{Weber.SDLWindow}, Array{Weber.SimpleMoment, 1},))
precompile(Weber.timed, (Weber.SDLClear,))
precompile(Weber.visual, (Weber.SDLWindow, String,))
precompile(Weber.match_lengths, (SampledSignals.SampleBuf{Float64, 1},))
precompile(Weber.check_events, (typeof( Weber.process_event), Weber.Experiment{Weber.SDLWindow}, Float64,))
precompile(Weber.addpractice, (Weber.TimedMoment, Base.Take{Base.Repeated{Array{Weber.TimedMoment, 1}}},))
precompile(Weber.record, (Weber.Experiment{Weber.SDLWindow}, String,))
precompile(Weber.play, (SampledSignals.SampleBuf{Float64, 1},))
precompile(Weber.addbreak, (Weber.Experiment{Weber.SDLWindow}, Weber.TimedMoment,))
precompile(Weber.keep_skipping, (Weber.Experiment{Weber.NullWindow}, Weber.CompoundMoment,))
precompile(Weber.display_duration, (Weber.SDLText,))
precompile(Weber.sound, (SampledSignals.SampleBuf{Float64, 1},))
precompile(Weber.ramp, (SampledSignals.SampleBuf{Float64, 1},))
precompile(Weber.record, (Weber.Experiment{Weber.NullWindow}, String,))
precompile(Weber.Type, (Type{Weber.Experiment}, Weber.ExperimentInfo, Weber.ExperimentData, Weber.ExperimentFlags, Weber.NullWindow,))
precompile(Weber.visual, (Weber.SDLWindow, String, Weber.SDLFont,))
precompile(Weber.addmoments, (Weber.Experiment{Weber.SDLWindow}, Array{Any, 1},))
precompile(Weber.delta_t, (Weber.ResponseMoment,))
precompile(Weber.attenuate, (SampledSignals.SampleBuf{Float64, 1}, Int64,))
precompile(Weber.watch_pauses, (Weber.Experiment{Weber.SDLWindow}, Weber.KeyDownEvent,))
precompile(Weber.keep_skipping, (Weber.Experiment{Weber.NullWindow}, Weber.TimedMoment,))
precompile(Weber.keep_skipping, (Weber.Experiment{Weber.SDLWindow}, Weber.ResponseMoment,))
precompile(Weber.moment, (Float64,))
precompile(Weber.copy, (Weber.DisplayStack,))
precompile(Weber.delta_t, (Weber.TimedMoment,))
precompile(Weber.addmoment, (Array{Weber.MomentQueue, 1}, Tuple{Array{Weber.SimpleMoment, 1}, Array{Weber.SimpleMoment, 1}},))
precompile(Weber.pause, (Weber.Experiment{Weber.SDLWindow}, String, Float64, Bool,))
precompile(Weber.moment, (Base.Take{Base.Repeated{Array{Weber.TimedMoment, 1}}},))
precompile(Weber.delete_expired!, (Weber.DisplayStack, Float64,))
precompile(Weber.addmoment, (Array{Weber.MomentQueue, 1}, Base.Take{Base.Repeated{Array{Any, 1}}},))
precompile(Weber.roundstr, (Float64, Int64,))
precompile(Weber.record_header, (Weber.Experiment{Weber.SDLWindow},))
precompile(Weber.record_helper, (Weber.Experiment{Weber.SDLWindow}, Tuple{Base.Pair{Symbol, Base.VersionNumber}, Base.Pair{Symbol, String}, Base.Pair{Symbol, String}, Base.Pair{Symbol, Int64}, Base.Pair{Symbol, Int64}, Base.Pair{Symbol, Float64}, Tuple{Symbol, String}, Tuple{Symbol, String}, Tuple{Symbol, Base.VersionNumber}, Tuple{Symbol, String}, Base.Pair{Symbol, String}}, Array{Symbol, 1},))
precompile(Weber.addmoment, (Array{Weber.MomentQueue, 1}, Base.Take{Base.Repeated{Array{Weber.TimedMoment, 1}}},))
precompile(Weber.instruct, (String,))
precompile(Weber.init_events, ())
precompile(Weber.addmoment, (Array{Weber.MomentQueue, 1}, Tuple{Base.Take{Base.Repeated{Array{Any, 1}}}},))
precompile(Weber.Type, (Type{Weber.ExperimentInfo}, Array{Any, 1}, Base.Dict{Symbol, Any}, Float64, Float64, Base.Dates.DateTime, Array{Symbol, 1}, Base.Nullable{Union{}}, Bool,))
precompile(Weber.addmoment, (Array{Weber.MomentQueue, 1}, Weber.OffsetStartMoment,))
precompile(Weber.addmoment, (Array{Weber.MomentQueue, 1}, Tuple{Base.Take{Base.Repeated{Weber.TimedMoment}}},))
precompile(Weber.sound, (SampledSignals.SampleBuf{FixedPointNumbers.Fixed{Int16, 15}, 1},))
precompile(Weber.process_event, (Weber.Experiment{Weber.SDLWindow}, Weber.CedrusUpEvent,))
precompile(Weber.addmoment, (Array{Weber.MomentQueue, 1}, Weber.CompoundMoment,))
precompile(Weber.unpause, (Weber.Experiment{Weber.SDLWindow}, Float64,))
precompile(Weber.refresh_display, (Weber.SDLWindow, Float64,))
precompile(Weber.moment, (Array{Any, 1},))
precompile(Weber.update_stack_helper!, (Weber.SDLWindow, Weber.RestoreDisplay,))
precompile(Weber.process_event, (Weber.Experiment{Weber.SDLWindow}, Weber.WindowUnfocused,))
precompile(Weber.process_event, (Weber.Experiment{Weber.SDLWindow}, Weber.KeyDownEvent,))
precompile(Weber.process_event, (Weber.Experiment{Weber.SDLWindow}, Weber.EndPauseEvent,))
precompile(Weber.process_event, (Weber.Experiment{Weber.SDLWindow}, Weber.KeyUpEvent,))
precompile(Weber.process_event, (Weber.Experiment{Weber.SDLWindow}, Weber.WindowFocused,))
precompile(Weber.process_event, (Weber.Experiment{Weber.SDLWindow}, Weber.CedrusDownEvent,))
precompile(Weber.skip_offsets, (Weber.Experiment{Weber.SDLWindow}, Weber.MomentQueue,))
precompile(Weber.update_stack_helper!, (Weber.SDLWindow, Weber.SDLText,))
precompile(Weber.__init__, ())
end
